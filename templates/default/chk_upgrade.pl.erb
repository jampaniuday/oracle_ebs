#!/usr/bin/perl

   ###################################################################
   # There is No official support.
   ###################################################################

$VER = 1.1;
   ###################################################################
   # HISTORY
   # Vers:   Date:     Description
   # v1.1    11/09/15  Original tracking
   ###################################################################


   #----------------------------------------------------------------
   #--  OPTION HANDLING  -------------------------------------------
   #----------------------------------------------------------------
sub do_opts {
  my $man = 0, $help = 0;

  use Getopt::Long;
  $retval=GetOptions(
            "f=s"       =>\$optfile,
            "dbg"       =>\$dbg,
            'help|?'    =>\$help,
            'man'       =>\$man
            ) ;

  # handles unknown options. (ARGV isnt empty!)
  if ( $ARGV[0] ) {
    print "Unprocessed by Getopt::Long\n";
    foreach (@ARGV) { print "$_\n"; }
    pod2usage(-message => "Unprocessed by Getopt::Long",
              -exitval => 2,
              -verbose => 0,
              -output  => \*STDERR);
  }

  #- Parse options and print usage if there is a syntax error,
  #- or if usage was explicitly requested.
  pod2usage(1)             if $help;
  pod2usage(-verbose => 2) if $man;

   # #- If no arguments were given, then allow STDIN to be used only
   # #- if it's not connected to a terminal (otherwise print usage)
   #   pod2usage("$0: No files given.")  if ((@ARGV == 0) && (-t STDIN));

  return $retval;
}

&do_opts or die "do_opts failed\n" ;


   ###########################################3
   #Main
   ###########################################3
   #

if (! defined($optfile) ) { print("Usage $0: -f result_file\n"); }

$resultname=$optfile if ( defined($optfile) ) ;

my %success_expect = (
  "Release 11.2.0.4.0"             => 2,
  "ORACLE instance started"        => 1,
  "Database mounted"               => 1,
  "Database opened"                => 1,
  "Connected to an idle instance"  => 1,
);


open(LFILE,"${resultname}") or die ("Cannot open $resultname\n");
while  ( <LFILE> ) {
  $actual{$1}++,next if (/(Release 11.2.0.4.0)/ );
  $actual{$1}++,next if (/(ORACLE instance started)/ );
  $actual{$1}++,next if (/(Database mounted)/ );
  $actual{$1}++,next if (/(Database opened)/ );
  $actual{$1}++,next if (/(Connected to an idle instance)/ );
}

foreach $line (keys %success_expect ) {
  if ( ! defined($actual{$line}) ) { die ("$line is not found within actual\n"); }
  if ( ! defined($success_expect{$line}) ) { die ("$line is not found within success_expect\n"); }
  if ( $actual{$line} != $success_expect{$line} )  {
    die ("$line, A: $actual{$line} E: $success_expect{$line}: $Counts are wrong. Failed\n");
  }
}

